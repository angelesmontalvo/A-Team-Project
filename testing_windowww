import java.util.*;

class Item {
    private String name;
    private double price;

    public Item(String name, double price) {
        this.name = name;
        this.price = price;
    }

    public String getName() {
        return name;
    }

    public double getPrice() {
        return price;
    }
}

class ShoppingCart {
    private List<Item> items = new ArrayList<>();

    public void addItem(Item item) {
        items.add(item);
    }

    public List<Item> getItems() {
        return items;
    }

    public double calculateTotal() {
        double total = 0;
        for (Item item : items) {
            total += item.getPrice();
        }
        return total;
    }
}

class User {
    private String email;
    private ShoppingCart cart;

    public User(String email) {
        this.email = email;
        this.cart = new ShoppingCart();
    }

    public String getEmail() {
        return email;
    }

    public ShoppingCart getCart() {
        return cart;
    }
}

class Payment {
    public static boolean processPayment(User user, double amount, String creditCardNumber) {
        // Simulate payment processing (you can add more logic here)
        System.out.println("Processing payment for user: " + user.getEmail());
        System.out.println("Amount: $" + amount);
        System.out.println("Credit Card Number: " + creditCardNumber);
        // Assuming payment is successful
        return true;
    }
}

class ECommerceSite {
    private Map<String, Item> inventory = new HashMap<>();
    private Map<String, User> users = new HashMap<>();

    public void addItemToInventory(String itemName, double itemPrice) {
        Item item = new Item(itemName, itemPrice);
        inventory.put(itemName, item);
    }

    public void registerUser(String email) {
        User user = new User(email);
        users.put(email, user);
    }

    public boolean searchItem(String itemName) {
        return inventory.containsKey(itemName);
    }

    public boolean orderItem(String userEmail, String itemName) {
        User user = users.get(userEmail);
        Item item = inventory.get(itemName);

        if (user != null && item != null) {
            user.getCart().addItem(item);
            return true;
        }

        return false;
    }

    public boolean payForItems(String userEmail, String creditCardNumber) {
        User user = users.get(userEmail);

        if (user != null) {
            double totalAmount = user.getCart().calculateTotal();
            return Payment.processPayment(user, totalAmount, creditCardNumber);
        }

        return false;
    }

    public void sendConfirmationEmail(String userEmail) {
        User user = users.get(userEmail);
        if (user != null) {
            System.out.println("Confirmation email sent to: " + user.getEmail());
        }
    }
}

public class Main {
    public static void main(String[] args) {
        ECommerceSite ecommerceSite = new ECommerceSite();

        ecommerceSite.addItemToInventory("Item1", 10.0);
        ecommerceSite.addItemToInventory("Item2", 20.0);

        ecommerceSite.registerUser("user1@example.com");

        if (ecommerceSite.searchItem("Item1")) {
            ecommerceSite.orderItem("user1@example.com", "Item1");
            ecommerceSite.orderItem("user1@example.com", "Item2");
        }

        if (ecommerceSite.payForItems("user1@example.com", "1234-5678-9012-3456")) {
            ecommerceSite.sendConfirmationEmail("user1@example.com");
        }
    }
}
